services:
{% if prometheus_enable and prometheus_type == "docker" %}
  prometheus:
    image: prom/prometheus:${PROMETHEUS_TAG}
    restart: ${PROMETHEUS_RESTART_POLICY}
    container_name: ${PROMETHEUS_CONTAINER_NAME}
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --storage.tsdb.retention.size=150GB
      - --web.enable-lifecycle
    networks:
    {% for name, config in prometheus_networks.items() %}
    {{name}}:
      {% for key, value in config.items() %}
      {{ key }}: {{ value }}
      {% endfor %}
    {% endfor %}
  {% if traefik_enable %}
    labels:
      - traefik.enable=true
      - traefik.docker.network=web_net
      - traefik.http.routers.prometheus.entrypoints=http
      - traefik.http.routers.prometheus.rule=Host(`${PROSUB}.${DOMAIN_ADDRESS}`)
      - traefik.http.routers.prometheus.middlewares=https-redirect
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.prometheus-secure.entrypoints=https
      - traefik.http.routers.prometheus-secure.rule=Host(`${PROSUB}.${DOMAIN_ADDRESS}`)
      - traefik.http.routers.prometheus-secure.tls=true
      - traefik.http.routers.prometheus-secure.tls.options=default
      - traefik.http.routers.prometheus-secure.middlewares=web-auth
      - traefik.http.routers.prometheus-secure.tls.certresolver=mycert
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
  {% endif %}
{% endif %}
{% if node_exporter_enable and node_exporter_type == "docker" %}
  node-exporter:
    image: prom/node-exporter:${EXPORTER_TAG}
    restart: ${RESTART_POLICY}
    hostname: '${HOSTNAME}'
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
    {% for name, config in node_exporter_networks.items() %}
    {{name}}:
      {% for key, value in config.items() %}
      {{ key }}: {{ value }}
      {% endfor %}
    {% endfor %}
{% endif %}
{% if blackbox_exporter_enable and blackbox_exporter_type == "docker" %}
  blackbox-exporter:
    image: prom/blackbox-exporter:${BLACKBOX_EXPORTER_TAG}
    restart: ${BLACKBOX_RESTART_POLICY}
    hostname: ${BLACKBOX_HOSTNAME}
    container_name: blackbox-exporter
    command:
      - '--config.file=/etc/blackboxexporter/blackbox-exporter.yml'
    volumes:
      - ./blackbox:/etc/blackboxexporter
    networks:
    {% for name, config in blackbox_exporter_networks.items() %}
    {{name}}:
      {% for key, value in config.items() %}
      {{ key }}: {{ value }}
      {% endfor %}
{% endif %}
